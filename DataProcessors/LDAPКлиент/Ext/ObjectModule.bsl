
Перем ПроксиКомпоненты;

///////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ СЕССИЕЙ

#Область УправлениеСессией

Функция ОткрытьСессию() Экспорт
	
	ПроксиКомпоненты = ПроксиКомпоненты();
	
	Соединение = ПроксиКомпоненты.ФабрикаXDTO.Создать("http://ldap.ak.ru/", "connection");
	Соединение.host = Хост;
	Соединение.port = Порт;
	Соединение.login = Пользователь;
	Соединение.password = Пароль;
	Соединение.domain = Домен;
		
	uuid = ПроксиКомпоненты.connect(Соединение, ВидLDAP);
	
КонецФункции

Функция ЗакрытьСессию() Экспорт
	
	ПроксиКомпоненты().disconnect(uuid);		
	uuid = Неопределено;
	
КонецФункции

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// ПРИКЛАДНЫЕ МЕТОДЫ

#Область ПрикладныеМетоды

// Поиск в LDAP по фильтром (objectClass=*) с получением всех атрибутов 
//
// Параметры:
//  baseDn	 - Строка - Ветка, с которой начинается поиск (например, CN=Users,DC=test,DC=ru )
// 
// Возвращаемое значение:
//  Массив - Массив структур
//
Функция НайтиВсе(baseDn) Экспорт
	
	Возврат ПоискПоФильтру(baseDn, "(objectClass=*)");
		
КонецФункции

// Поиск в LDAP с указанием фильтра
//
// Параметры:
//  baseDn	 - Строка - Ветка, с которой начинается поиск (например, CN=Users,DC=test,DC=ru )
//  Фильтр	 - Строка - Фильтр, подробнее см. https://ldap.com/ldap-filters/
//  Атрибуты   - Строка, Неопределено - Список атрибутов, разделенных ",". Если параметр не задан или пустая строка, то будут возвращены все атрибуты
// 
// Возвращаемое значение:
//  Массив - Массив структур
//
Функция ПоискПоФильтру(baseDn, Фильтр, Знач Атрибуты = Неопределено) Экспорт
	
	Результат = Новый Массив();
			
	ДанныеLDAP = ПроксиКомпоненты().searchByFilter(ПараметрыПоиска(baseDn, Фильтр), Атрибуты);
	Для Каждого Entry Из ДанныеLDAP.entries.entry Цикл
		Запись = Новый Структура("DN, Атрибуты", Entry.dn, Новый Соответствие());				
		Для Каждого Attribute Из Entry.attributes.attribute Цикл
			Если Attribute.value.Количество() > 1 Тогда
				ЗначенияАтрибута = Новый Массив();
				Для Каждого Value Из Attribute.value Цикл
					ЗначенияАтрибута.Добавить(Value);
				КонецЦикла;                          
				Запись.Атрибуты.Вставить(Attribute.name, ЗначенияАтрибута);
				
			ИначеЕсли Attribute.value.Количество() = 1 Тогда				
				Запись.Атрибуты.Вставить(Attribute.name, Attribute.value[0]);				
				
			Иначе
				Запись.Атрибуты.Вставить(Attribute.name, Неопределено);
				
			КонецЕсли;
		КонецЦикла;
		
		Результат.Добавить(Запись);		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает все доступные атрибуты сущностей 
//
// Параметры:
//  baseDn	 - Строка - Ветка, с которой начинается поиск (например, CN=Users,DC=test,DC=ru )
//  Фильтр	 - Строка - Фильтр, подробнее см. https://ldap.com/ldap-filters/
// 
// Возвращаемое значение:
//  Массив - 
//
Функция Атрибуты(baseDn, Фильтр) Экспорт
	
	Результат = Новый Массив();
	
	ДанныеLDAP = ПроксиКомпоненты().availableAttributes(ПараметрыПоиска(baseDn, Фильтр));
	
	Для Каждого АтрибутXDTO Из ДанныеLDAP.attributes.attribute Цикл
		Результат.Добавить(АтрибутXDTO);	
	КонецЦикла;
		
	Возврат Результат;
		
КонецФункции

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

Функция ПроксиКомпоненты()
	
	ОписаниеОшибки = Неопределено;
	Если ПроксиКомпоненты = Неопределено Тогда
		ПроксиКомпоненты = КомпонентыJavaПовтИсп.ПроксиКомпоненты(
			Справочники.КомпонентыJava.ldapclient, ОписаниеОшибки);
	КонецЕсли;
		
	Если ПроксиКомпоненты = Неопределено Тогда
		Если Не ЗначениеЗаполнено(ОписаниеОшибки) Тогда
			ОписаниеОшибки = НСтр("ru = 'Java-компонента <LDAP-клиент> не найдена'");
		КонецЕсли;
		
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
			
	Возврат ПроксиКомпоненты;
	
КонецФункции

Функция ПараметрыПоиска(baseDn, Фильтр)
	
	ПараметрыПоиска = ПроксиКомпоненты().ФабрикаXDTO.Создать("http://ldap.ak.ru/", "searchParameters");
	ПараметрыПоиска.uuid = uuid;
	ПараметрыПоиска.baseDn = baseDn;
	ПараметрыПоиска.filter = Фильтр;
	
	Возврат ПараметрыПоиска;
	
КонецФункции

#КонецОбласти