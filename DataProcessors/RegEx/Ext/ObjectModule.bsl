
Перем ПроксиКомпоненты;


///////////////////////////////////////////////////////////////////////////////
// ОСНОВНАЯ ФУНКЦИОНАЛЬНОСТЬ

#Область ОпределениеСоответствия

// Проверка на полное соответствие текста шаблону
//
// Параметры:
//  Паттерн		   - Строка - Регулярное выражение
//  Текст			 - Строка - Текст
//  ОписаниеОшибки	- Неопределено - "Выходной" параметр, заполняется при ошибки
// 
// Возвращаемое значение:
//  Булево - 
//
Функция ПолноеСоответствие(Паттерн, Текст, ОписаниеОшибки = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		Прокси = Прокси(ОписаниеОшибки);
		Если Прокси <> Неопределено Тогда
			Результат = Прокси.matches(Паттерн, Текст);
		КонецЕсли;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Результат;
		
КонецФункции

// Проверка на полное соответствие текста шаблону
//
// Параметры:
//  Паттерн		   - Строка - Регулярное выражение
//  Текст			 - Строка - Текст
//  ОписаниеОшибки	- Неопределено - "Выходной" параметр, заполняется при ошибки
// 
// Возвращаемое значение:
//  Булево - 
//
Функция СоответствиеЛюбойЧасти(Паттерн, Текст, ОписаниеОшибки = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		Прокси = Прокси(ОписаниеОшибки);
		Если Прокси <> Неопределено Тогда
			Результат = Прокси.find(Паттерн, Текст);
		КонецЕсли;		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// Проверка на полное соответствие текста шаблону
//
// Параметры:
//  Паттерн		   - Строка - Регулярное выражение
//  Текст			 - Строка - Текст
//  ОписаниеОшибки	- Неопределено - "Выходной" параметр, заполняется при ошибки
// 
// Возвращаемое значение:
//  Булево - 
//
Функция СоответствиеНачалу(Паттерн, Текст, ОписаниеОшибки = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		Прокси = Прокси(ОписаниеОшибки);
		Если Прокси <> Неопределено Тогда
			Результат = Прокси.lookingAt(Паттерн, Текст);
		КонецЕсли;		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ЗаменаТекста

// Возвращает новую строку, где первая подстрока, совпавшая с шаблоном будет заменена
//
// Параметры:
//  Паттерн			 - Строка		 - Регулярное выражение
//  Текст			   - Строка		 - Текст
//  ПодстрокаЗамены	 - Строка		 - Подстрока замены
//  ОписаниеОшибки	  - Неопределено   - "Выходной" параметр, заполняется при ошибки
// 
// Возвращаемое значение:
//  Булево - 
//
Функция ЗаменитьПервое(Паттерн, Текст, ПодстрокаЗамены, ОписаниеОшибки = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		Прокси = Прокси(ОписаниеОшибки);
		Если Прокси <> Неопределено Тогда
			Результат = Прокси.replaceFirst(Паттерн, Текст, ПодстрокаЗамены);
		КонецЕсли;		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Результат;
		
КонецФункции

// Возвращает новую строку, где каждая подстрока, совпавшая с шаблоном будет заменена
//
// Параметры:
//  Паттерн			 - Строка	   - Регулярное выражение
//  Текст			   - Строка	   - Текст
//  ПодстрокаЗамены	 - Строка       - Подстрока замены
//  ОписаниеОшибки	  - Неопределено - "Выходной" параметр, заполняется при ошибки
// 
// Возвращаемое значение:
//  Булево - 
//
Функция ЗаменитьВсе(Паттерн, Текст, ПодстрокаЗамены, ОписаниеОшибки = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		Прокси = Прокси(ОписаниеОшибки);
		Если Прокси <> Неопределено Тогда
			Результат = Прокси.replaceAll(Паттерн, Текст, ПодстрокаЗамены);
		КонецЕсли;		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти



///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

Функция Прокси(ОписаниеОшибки = Неопределено)
	
	Если ПроксиКомпоненты = Неопределено Тогда	
		ПроксиКомпоненты = КомпонентыJavaПовтИсп.ПроксиКомпоненты(
			Справочники.КомпонентыJava.regex, ОписаниеОшибки);
	КонецЕсли;			
						
	Возврат ПроксиКомпоненты;
	
КонецФункции

#КонецОбласти
